
R version 4.5.1 (2025-06-13) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin20

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

During startup - Warning messages:
1: Setting LC_CTYPE failed, using "C" 
2: Setting LC_COLLATE failed, using "C" 
3: Setting LC_TIME failed, using "C" 
4: Setting LC_MESSAGES failed, using "C" 
5: Setting LC_MONETARY failed, using "C" 
[R.app GUI 1.82 (8536) x86_64-apple-darwin20]

WARNING: You're using a non-UTF8 locale, therefore only ASCII characters will work.
Please read R for Mac OS X FAQ (see Help) section 9 and adjust your system preferences accordingly.
[Workspace restored from /Users/liyaung/.RData]
[History restored from /Users/liyaung/.Rapp.history]

> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

> library(tidyr)
> 
> # --- setup --------------------------------------------------------------------
> set.seed(42)
> suppressPackageStartupMessages({
+   library(dplyr)
+   library(tidyr)
+ })
> 
> # --- study parameters ---------------------------------------------------------
> study_id <- "MIG666"
> countries <- c("Cambodia", "Brazil", "Colombia", "Curacao",
+                "Thailand", "Poland", "Portugal", "United States")
> sites_per_country <- c(Cambodia=2, Brazil=3, Colombia=2, Curacao=1,
+                        Thailand=2, Poland=2, Portugal=2, "United States"=4)
> 
> # --- site generation (unique IDs, no duplicates) ------------------------------
> site_start_id <- 666
> n_sites <- sum(sites_per_country)
> 
> site_df <- tibble(
+   SITEID  = as.character(seq(site_start_id, length.out = n_sites)),
+   COUNTRY = rep(names(sites_per_country), times = sites_per_country)
+ )
> 
> # --- trial summary (TS) -------------------------------------------------------
> ts_df <- tibble(
+   STUDYID = study_id,
+   DOMAIN  = "TS",
+   TSSEQ   = 1:6,
+   TSPARMCD = c("TITLE", "PHASE", "TRT", "PLANSUB", "CNTINV", "COUNTRY"),
+   TSPARM   = c("Study Title", "Study Phase", "Investigational Treatment",
+                "Planned Number of Subjects", "Planned Number of Sites",
+                "Participating Countries"),
+   TSVAL    = c("A Phase 1 Randomized Study of a Migraine Slaying Chewing Gum",
+                "Phase 1", "Gum MIG666", "50",
+                nrow(site_df),
+                paste(countries, collapse = ", "))
+ )
> 
> # --- arms and elements --------------------------------------------------------
> arms <- tibble(
+   ARMCD = c("PLACEBO", "MIGL", "MIGM", "MIGH"),
+   ARM   = c("Placebo", "Low Dose Gum", "Medium Dose Gum", "High Dose Gum")
+ )
> 
> trial_elements <- tibble(
+   ETCD  = c("SCREENING", "TREATMENT", "FOLLOWUP"),
+   EPOCH = c("Screening", "Treatment", "Follow-up")
+ )
> 
> # TA: arms Ã— elements
> ta_df <- arms %>%
+   tidyr::crossing(trial_elements) %>%
+   group_by(ARMCD) %>%
+   mutate(
+     STUDYID = study_id,
+     DOMAIN  = "TA",
+     TAETORD = row_number()
+   ) %>%
+   ungroup()
> 
> # TE
> te_df <- tibble(
+   STUDYID = study_id,
+   DOMAIN  = "TE",
+   ETCD    = c("SCREENING", "TREATMENT", "FOLLOWUP"),
+   ELEMENT = c("Screening", "Treatment", "Follow-up"),
+   TESTRL  = c(0, 1, 15)
+ )
> 
> # TV (visits)
> visits <- tibble(
+   VISITNUM = 1:10,
+   VISIT = c("Screening", "Treatment Visit 1", "Treatment Visit 2", "Treatment Visit 3",
+             "Treatment Visit 4", "End of Treatment",
+             "Follow-up Visit 1", "Follow-up Visit 2", "Follow-up Visit 3",
+             "End of Study"),
+   TVSTRL = c(0, 1, 3, 5, 7, 8, 14, 21, 28, 35)
+ )
> 
> tv_df <- visits %>%
+   mutate(STUDYID = study_id, DOMAIN = "TV")
> 
> # --- DM (subjects) ------------------------------------------------------------
> n_subjects <- 50
> races <- c("WHITE", "BLACK OR AFRICAN AMERICAN", "ASIAN", "OTHER")
> 
> n_arms <- nrow(arms)
> base_per_arm <- n_subjects %/% n_arms
> remainder <- n_subjects %% n_arms
> 
> # Balance subjects across arms (+ remainder random)
> subjects_base <- arms %>%
+   slice(rep(1:n_arms, each = base_per_arm)) %>%
+   bind_rows(slice_sample(arms, n = remainder, replace = FALSE)) %>%
+   mutate(SUBJID = sprintf("SUBJ%03d", 1:n_subjects))
> 
> # Site and demographics
> country_lookup <- setNames(site_df$COUNTRY, site_df$SITEID)
> 
> dm_df <- subjects_base %>%
+   mutate(
+     SITEID  = sample(site_df$SITEID, n(), replace = TRUE),
+     COUNTRY = unname(country_lookup[SITEID]),
+     AGE     = sample(18:65, n(), replace = TRUE),
+     SEX     = sample(c("M","F"), n(), replace = TRUE),
+     RACE    = sample(races, n(), replace = TRUE)
+   ) %>%
+   mutate(
+     STUDYID = study_id,
+     DOMAIN  = "DM",
+     USUBJID = paste0(SITEID, "-", SUBJID)
+   ) %>%
+   select(STUDYID, DOMAIN, USUBJID, SUBJID, SITEID, COUNTRY, AGE, SEX, RACE, ARMCD, ARM)
> 
> # --- AE (adverse events) ------------------------------------------------------
> set.seed(42)
> ae_terms     <- c("Headache","Nausea","Dizziness","Fatigue","Insomnia","Anxiety",
+                   "Back pain","Nasopharyngitis","Photophobia","Phonophobia")
> ae_severity  <- c("Mild","Moderate","Severe")
> ae_outcome   <- c("Recovered/Resolved","Recovering/Resolving","Not Recovered","Unknown")
> aerel_options<- c("Related","Not Related","Unknown")
> 
> study_start <- as.Date("2025-01-01")
> 
> ae_df <- dm_df %>%
+   mutate(
+     n_ae = sample(0:3, n(), replace = TRUE, prob = c(0.3, 0.4, 0.2, 0.1))
+   ) %>%
+   filter(n_ae > 0) %>%
+   uncount(weights = n_ae, .id = "AESEQ") %>%
+   mutate(
+     STUDYID = STUDYID,
+     DOMAIN  = "AE",
+     AETERM  = sample(ae_terms, n(), replace = TRUE),
+     AEDECOD = toupper(AETERM),
+     AESTDTC = format(study_start + sample(1:35, n(), replace = TRUE), "%Y-%m-%d"),
+     AEENDTC = format(as.Date(AESTDTC) + sample(1:10, n(), replace = TRUE), "%Y-%m-%d"),
+     AESEV   = sample(ae_severity, n(), replace = TRUE, prob = c(0.6, 0.3, 0.1)),
+     AEOUT   = sample(ae_outcome,  n(), replace = TRUE, prob = c(0.7, 0.2, 0.05, 0.05)),
+     AEREL   = sample(aerel_options, n(), replace = TRUE, prob = c(0.5, 0.4, 0.1)),
+     AESER   = ifelse(AESEV == "Severe" & runif(n()) < 0.5, "Y", "")
+   ) %>%
+   select(STUDYID, DOMAIN, USUBJID, AESEQ, AETERM, AEDECOD, AESTDTC, AEENDTC, AESEV, AEOUT, AEREL, AESER)
> 
> # --- EX (exposure) ------------------------------------------------------------
> ex_map <- tibble(
+   ARMCD   = c("PLACEBO","MIGL","MIGM","MIGH"),
+   EXTRT   = c("Placebo Gum","Low Dose Gum","Medium Dose Gum","High Dose Gum"),
+   EXDOSE  = c(0, 50, 100, 150),
+   EXDOSU  = "mg",
+   EXDOSFRM= "Gum",
+   EXDOSFRQ= "QD",
+   EXROUTE = "Oral"
+ )
> 
> ex_df <- dm_df %>%
+   left_join(ex_map, by = "ARMCD") %>%
+   mutate(
+     DOMAIN  = "EX",
+     EXSTDTC = study_start,
+     EXENDTC = study_start + 27,
+     EXDUR   = as.integer(EXENDTC - EXSTDTC + 1) # 28 days
+   ) %>%
+   select(STUDYID, DOMAIN, USUBJID, ARMCD, EXTRT, EXDOSE, EXDOSU, EXDOSFRM, EXDOSFRQ,
+          EXROUTE, EXSTDTC, EXENDTC, EXDUR)
> 
> # --- quick overview --------------------------------------------------------------
> head(site_df)
# A tibble: 6 x 2
  SITEID COUNTRY 
  <chr>  <chr>   
1 666    Cambodia
2 667    Cambodia
3 668    Brazil  
4 669    Brazil  
5 670    Brazil  
6 671    Colombia
> head(dm_df)
# A tibble: 6 x 11
  STUDYID DOMAIN USUBJID     SUBJID  SITEID COUNTRY         AGE SEX   RACE                      ARMCD   ARM    
  <chr>   <chr>  <chr>       <chr>   <chr>  <chr>         <int> <chr> <chr>                     <chr>   <chr>  
1 MIG666  DM     666-SUBJ001 SUBJ001 666    Cambodia         62 M     BLACK OR AFRICAN AMERICAN PLACEBO Placebo
2 MIG666  DM     675-SUBJ002 SUBJ002 675    Thailand         59 F     WHITE                     PLACEBO Placebo
3 MIG666  DM     669-SUBJ003 SUBJ003 669    Brazil           26 F     WHITE                     PLACEBO Placebo
4 MIG666  DM     683-SUBJ004 SUBJ004 683    United States    46 M     BLACK OR AFRICAN AMERICAN PLACEBO Placebo
5 MIG666  DM     682-SUBJ005 SUBJ005 682    United States    29 F     OTHER                     PLACEBO Placebo
6 MIG666  DM     680-SUBJ006 SUBJ006 680    United States    37 F     OTHER                     PLACEBO Placebo
> head(ae_df)
# A tibble: 6 x 12
  STUDYID DOMAIN USUBJID     AESEQ AETERM          AEDECOD         AESTDTC    AEENDTC    AESEV    AEOUT              AEREL       AESER
  <chr>   <chr>  <chr>       <int> <chr>           <chr>           <chr>      <chr>      <chr>    <chr>              <chr>       <chr>
1 MIG666  AE     666-SUBJ001     1 Insomnia        INSOMNIA        2025-01-10 2025-01-11 Mild     Recovered/Resolved Related     ""   
2 MIG666  AE     666-SUBJ001     2 Fatigue         FATIGUE         2025-01-17 2025-01-20 Moderate Recovered/Resolved Not Related ""   
3 MIG666  AE     666-SUBJ001     3 Nausea          NAUSEA          2025-01-27 2025-02-01 Mild     Recovered/Resolved Not Related ""   
4 MIG666  AE     675-SUBJ002     1 Nasopharyngitis NASOPHARYNGITIS 2025-02-03 2025-02-11 Mild     Recovered/Resolved Unknown     ""   
5 MIG666  AE     675-SUBJ002     2 Nausea          NAUSEA          2025-01-30 2025-02-05 Mild     Recovered/Resolved Not Related ""   
6 MIG666  AE     675-SUBJ002     3 Dizziness       DIZZINESS       2025-01-26 2025-02-02 Mild     Recovered/Resolved Related     ""   
> head(ex_df)
# A tibble: 6 x 13
  STUDYID DOMAIN USUBJID     ARMCD   EXTRT       EXDOSE EXDOSU EXDOSFRM EXDOSFRQ EXROUTE EXSTDTC    EXENDTC    EXDUR
  <chr>   <chr>  <chr>       <chr>   <chr>        <dbl> <chr>  <chr>    <chr>    <chr>   <date>     <date>     <int>
1 MIG666  EX     666-SUBJ001 PLACEBO Placebo Gum      0 mg     Gum      QD       Oral    2025-01-01 2025-01-28    28
2 MIG666  EX     675-SUBJ002 PLACEBO Placebo Gum      0 mg     Gum      QD       Oral    2025-01-01 2025-01-28    28
3 MIG666  EX     669-SUBJ003 PLACEBO Placebo Gum      0 mg     Gum      QD       Oral    2025-01-01 2025-01-28    28
4 MIG666  EX     683-SUBJ004 PLACEBO Placebo Gum      0 mg     Gum      QD       Oral    2025-01-01 2025-01-28    28
5 MIG666  EX     682-SUBJ005 PLACEBO Placebo Gum      0 mg     Gum      QD       Oral    2025-01-01 2025-01-28    28
6 MIG666  EX     680-SUBJ006 PLACEBO Placebo Gum      0 mg     Gum      QD       Oral    2025-01-01 2025-01-28    28
> head(ts_df)
# A tibble: 6 x 6
  STUDYID DOMAIN TSSEQ TSPARMCD TSPARM                     TSVAL                                                                         
  <chr>   <chr>  <int> <chr>    <chr>                      <chr>                                                                         
1 MIG666  TS         1 TITLE    Study Title                A Phase 1 Randomized Study of a Migraine Slaying Chewing Gum                  
2 MIG666  TS         2 PHASE    Study Phase                Phase 1                                                                       
3 MIG666  TS         3 TRT      Investigational Treatment  Gum MIG666                                                                    
4 MIG666  TS         4 PLANSUB  Planned Number of Subjects 50                                                                            
5 MIG666  TS         5 CNTINV   Planned Number of Sites    18                                                                            
6 MIG666  TS         6 COUNTRY  Participating Countries    Cambodia, Brazil, Colombia, Curacao, Thailand, Poland, Portugal, United States
> head(ta_df)
# A tibble: 6 x 7
  ARMCD ARM           ETCD      EPOCH     STUDYID DOMAIN TAETORD
  <chr> <chr>         <chr>     <chr>     <chr>   <chr>    <int>
1 MIGH  High Dose Gum FOLLOWUP  Follow-up MIG666  TA           1
2 MIGH  High Dose Gum SCREENING Screening MIG666  TA           2
3 MIGH  High Dose Gum TREATMENT Treatment MIG666  TA           3
4 MIGL  Low Dose Gum  FOLLOWUP  Follow-up MIG666  TA           1
5 MIGL  Low Dose Gum  SCREENING Screening MIG666  TA           2
6 MIGL  Low Dose Gum  TREATMENT Treatment MIG666  TA           3
> head(te_df)
# A tibble: 3 x 5
  STUDYID DOMAIN ETCD      ELEMENT   TESTRL
  <chr>   <chr>  <chr>     <chr>      <dbl>
1 MIG666  TE     SCREENING Screening      0
2 MIG666  TE     TREATMENT Treatment      1
3 MIG666  TE     FOLLOWUP  Follow-up     15
> head(tv_df)
# A tibble: 6 x 5
  VISITNUM VISIT             TVSTRL STUDYID DOMAIN
     <int> <chr>              <dbl> <chr>   <chr> 
1        1 Screening              0 MIG666  TV    
2        2 Treatment Visit 1      1 MIG666  TV    
3        3 Treatment Visit 2      3 MIG666  TV    
4        4 Treatment Visit 3      5 MIG666  TV    
5        5 Treatment Visit 4      7 MIG666  TV    
6        6 End of Treatment       8 MIG666  TV    
> setwd("/Users/liyaung/Desktop/MIG666")
> # Set output directory (optional)
> output_dir <- "mig666_data"
> if (!dir.exists(output_dir)) dir.create(output_dir)
> 
> # Export each dataframe as CSV
> write.csv(site_df, file = file.path(output_dir, "site_df.csv"), row.names = FALSE)
> write.csv(dm_df, file = file.path(output_dir, "dm_df.csv"), row.names = FALSE)
> write.csv(ae_df, file = file.path(output_dir, "ae_df.csv"), row.names = FALSE)
> write.csv(ex_df, file = file.path(output_dir, "ex_df.csv"), row.names = FALSE)
> write.csv(ts_df, file = file.path(output_dir, "ts_df.csv"), row.names = FALSE)
> write.csv(ta_df, file = file.path(output_dir, "ta_df.csv"), row.names = FALSE)
> write.csv(te_df, file = file.path(output_dir, "te_df.csv"), row.names = FALSE)
> write.csv(tv_df, file = file.path(output_dir, "tv_df.csv"), row.names = FALSE) 
2025-09-26 14:24:41.886 R[5164:83724] The class 'NSSavePanel' overrides the method identifier.  This method is implemented by class 'NSWindow'
> 